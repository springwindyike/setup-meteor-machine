{"name":"Meteor开发环境指南","tagline":"Ubuntu版","body":"# Meteor环境安装指南\r\n\r\n\r\n本指南主要针对采用Ubuntu开发meteor，并且需要在本地实现部署的用户，配置完毕以后可以通过 mup deploy在本机实现meteor部署。 对于哪些希望在国内服务器上部署的开发者，本文也具备参考意义。 \r\n\r\n如果是仅需本地开发的用户(包括Ubuntu用户和Mac用户)可以执行官方指令\r\n\r\n\tcurl https://install.meteor.com/ | sh\r\n\r\n特别说明：基于国内开发者被墙的现状，已经将nodejs和phantomjs两个package提前下载放到script目录下，clone有点慢。\r\n\r\n1. 安装配置Ubuntu14.04\r\n-------\r\n\r\n首先安装Ubuntu主机，我们推荐采用虚拟机开发，我们在Vmware里安装Ubuntu14.04，用户名是meteor\r\n\r\n注意，安装时需要下载的文件尽量skip掉，安装完毕以后可以在比较快的镜像里面下载\r\n\r\n2. 启用root用户\r\n-------\r\n \r\n可以通过设置root密码的方式来启用root用户\r\n\r\n\t$ sudo passwd root\r\n\r\n设置完以后可以试一下su指令，进入root模式，后面很多操作采用root操作\r\n\r\n![](images/add-root.png)\r\n\r\n\r\n3. 配置源并更新\r\n-------\r\n\r\n安装以后通过编辑/etc/apt/sources.list配置源\r\n\r\n\tmeteor@ubuntu:~$ sudo gedit /etc/apt/sources.list\r\n\r\n对于清华校内的用户，可以采用tuna的源，可以节省对外流量\r\n\r\n\tdeb http://mirrors.i.tuna.tsinghua.edu.cn/ubuntu trusty main restricted universe multiverse\r\n\tdeb http://mirrors.i.tuna.tsinghua.edu.cn/ubuntu trusty-security main restricted universe multiverse\r\n\tdeb http://mirrors.i.tuna.tsinghua.edu.cn/ubuntu trusty-updates main restricted universe multiverse\r\n\tdeb http://mirrors.i.tuna.tsinghua.edu.cn/ubuntu trusty-proposed main restricted universe multiverse\r\n\tdeb http://mirrors.i.tuna.tsinghua.edu.cn/ubuntu trusty-backports main restricted universe multiverse\r\n\tdeb-src http://mirrors.i.tuna.tsinghua.edu.cn/ubuntu trusty main restricted universe multiverse\r\n\tdeb-src http://mirrors.i.tuna.tsinghua.edu.cn/ubuntu trusty-security main restricted universe multiverse\r\n\tdeb-src http://mirrors.i.tuna.tsinghua.edu.cn/ubuntu trusty-updates main restricted universe multiverse\r\n\tdeb-src http://mirrors.i.tuna.tsinghua.edu.cn/ubuntu trusty-proposed main restricted universe multiverse\r\n\tdeb-src http://mirrors.i.tuna.tsinghua.edu.cn/ubuntu trusty-backports main restricted universe multiverse\r\n\r\n\r\n对于北京公网用户而言，经测试，最快的ubuntu镜像是http://mirrors.yun-idc.com/ubuntu/的镜像\r\n\r\n\tdeb http://mirrors.yun-idc.com/ubuntu/ trusty main restricted universe multiverse\r\n\tdeb http://mirrors.yun-idc.com/ubuntu/ trusty-security main restricted universe multiverse\r\n\tdeb http://mirrors.yun-idc.com/ubuntu/ trusty-updates main restricted universe multiverse\r\n\tdeb http://mirrors.yun-idc.com/ubuntu/ trusty-proposed main restricted universe multiverse\r\n\tdeb http://mirrors.yun-idc.com/ubuntu/ trusty-backports main restricted universe multiverse\r\n\tdeb-src http://mirrors.yun-idc.com/ubuntu/ trusty main restricted universe multiverse\r\n\tdeb-src http://mirrors.yun-idc.com/ubuntu/ trusty-security main restricted universe multiverse\r\n\tdeb-src http://mirrors.yun-idc.com/ubuntu/ trusty-updates main restricted universe multiverse\r\n\tdeb-src http://mirrors.yun-idc.com/ubuntu/ trusty-proposed main restricted universe multiverse\r\n\tdeb-src http://mirrors.yun-idc.com/ubuntu/ trusty-backports main restricted universe multiverse\r\n\r\n随后执行更新指令\r\n\t\r\n\tmeteor@ubuntu:~$ sudo apt-get update -y \r\n\tmeteor@ubuntu:~$ sudo apt-get upgrade -y \r\n\r\n4.配置openssh和root的登录\r\n-------\r\n\r\n\r\n\tmeteor@ubuntu:~$ sudo apt-get install openssh-client openssh-server git -y\r\n\tmeteor@ubuntu:~$ ssh-keygen -t rsa\r\n\tmeteor@ubuntu:~$ su\r\n\troot@ubuntu:/home/meteor# cd\r\n\troot@ubuntu:~# mkdir .ssh\r\n\troot@ubuntu:~# cp /home/meteor/.ssh/id_rsa.pub /root/.ssh/authorized_keys \r\n\r\n\r\n安装openssh并生成sshkey，  \r\n然后再进入root用户的home，创建/root/.ssh/  \r\n最后将客户端的id_rsa.pub内容复制到 /root/.ssh/authorized_keys 内，以达到权限认证目的\r\n\r\n![](images/ssh.png)\r\n\r\n然后再退出root用户，在重启ssh服务，最后使用root用户连接到本地的ssh里面\r\n\r\n![](images/ssh-login.png)\r\n\r\n\r\n\r\n5. 配置GitHub账户，并clone本项目\r\n-------\r\n\r\n首先登陆github，再进入如下界面\r\nhttps://github.com/settings/ssh\r\n\r\n点击右上角的Add SSH key\r\n\r\n\r\n然后执行\r\n\r\n\tmeteor@ubuntu:~$ gedit .ssh/id_rsa.pub\r\n\r\n复制所有内容，黏贴到页面里\r\n\r\n![](images/github-key.png)\r\n\r\n![](images/add-ssh-key.png)\r\n\r\n\r\n然后在命令行执行如下指令下载部署用项目，项目有点大，稍微等一段时间\r\n\r\n\tmeteor@ubuntu:~$ git clone git@github.com:wmzhai/setup-meteor-machine.git\r\n\r\n![](images/clone-this.png)\r\n\r\n\r\n6. 安装phantomjs\r\n-------\r\n\r\n切换目录，执行如下脚本\r\n\r\n\tmeteor@ubuntu:~/setup-meteor-machine/scripts$ cd ~/setup-meteor-machine/scripts\r\n\tmeteor@ubuntu:~/setup-meteor-machine/scripts$ ./install-phantomjs.sh\r\n\r\n执行完毕成功了会显示版本号1.9.8\r\n\r\n![](images/install-phantomjs.png)\r\n\r\n\r\n7. 安装nodejs\r\n-------\r\n\r\n执行如下脚本\r\n\r\n\tmeteor@ubuntu:~/setup-meteor-machine/scripts$ ./install-node.sh \r\n\r\n执行完毕成功了会nodejs和npm的版本号\r\n\r\n![](images/install-nodejs.png)\r\n\r\n8. 安装mongodb v3\r\n-------\r\n\r\n确保网络畅通，执行如下脚本 \r\n\t\r\n\tmeteor@ubuntu:~/setup-meteor-machine/scripts$ ./install-mongodb.sh\r\n\r\n这一步需要从网上下载文件，需要等一段时间，安装完毕以后输入如下指令验证，一切正常的话会进入mongodb的shell\r\n\r\n![](images/install-mongodb.png)\r\n\r\n\r\n9. 安装meteor\r\n-------\r\n\r\n切换回home路径，执行如下指令安装meteor并新建项目运行\r\n\r\n\tmeteor@ubuntu:~$ curl https://install.meteor.com/ | sh\r\n\r\n![](images/install-meteor.png)\r\n\r\n\tmeteor@ubuntu:~$ meteor create hello\r\n\tmeteor@ubuntu:~$ cd hello\r\n\tmeteor@ubuntu:~$ meteor \r\n\r\n![](images/hello-meteor.png)\r\n\r\n用浏览器进入http://localhost:3000/ 验证项目正常运行\r\n\r\n![](images/launching-meteor.png)\r\n\r\n\r\n\r\n10. 安装mup\r\n-------\r\n\r\nCtrl-C退出服务器运行\r\n\r\n\tmeteor@ubuntu:~/hello$ sudo npm install -g mup\r\n\r\n![](images/install-mup.png)\r\n\r\n\r\n11. mup init\r\n-------\r\n\r\n执行mup init生成配置文件\r\n\r\n\tmeteor@ubuntu:~/hello$ mup init\r\n\r\n![](images/mup-init.png)\r\n\r\n然后编辑mup.json如下\r\n\r\n\t{\r\n\t  // Server authentication info\r\n\t  \"servers\": [\r\n\t    {\r\n\t      \"host\": \"localhost\",\r\n\t      \"username\": \"root\",\r\n\t      \"pem\": \"~/.ssh/id_rsa\"\r\n\t    }\r\n\t  ],\r\n\t\r\n\t  // Install MongoDB in the server, does not destroy local MongoDB on future setup\r\n\t  \"setupMongo\": false,\r\n\t\r\n\t  // WARNING: Node.js is required! Only skip if you already have Node.js installed on server.\r\n\t  \"setupNode\": false,\r\n\t\r\n\t  // WARNING: If nodeVersion omitted will setup 0.10.36 by default. Do not use v, only version number.\r\n\t  \"nodeVersion\": \"0.10.36\",\r\n\t\r\n\t  // Install PhantomJS in the server\r\n\t  \"setupPhantom\": false,\r\n\t\r\n\t  // Application name (No spaces)\r\n\t  \"appName\": \"hello\",\r\n\t\r\n\t  // Location of app (local directory)\r\n\t  \"app\": \".\",\r\n\t\r\n\t  // Configure environment\r\n\t  \"env\": {\r\n\t    \"ROOT_URL\": \"http://localhost\"\r\n\t  },\r\n\t\r\n\t  // Meteor Up checks if the app comes online just after the deployment\r\n\t  // before mup checks that, it will wait for no. of seconds configured below\r\n\t  \"deployCheckWaitTime\": 15\r\n\t}\r\n\r\n\r\n12. mup setup安装环境\r\n-------\r\n\r\n再执行mup setup，这个步骤有点久，需要等一段时间\r\n\r\n\tmeteor@ubuntu:~/hello$ mup setup\r\n\r\n![](images/mup-setup.png)\r\n\r\n13. mup deploy部署\r\n-------\r\n\r\n\tmeteor@ubuntu:~/hello$ mup deploy\r\n\r\n![](images/mup-deploy.png)\r\n\r\n项目是被安装到/opt/hello目录下，可以切换目录进去看看\r\n\r\n![](images/deploy-dir.png)\r\n\r\n14. 浏览部署结果\r\n-------\r\n\r\n最后在浏览器里面打开http://localhost验证是否部署正常\r\n\r\n![](images/deploy-hello.png)\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}